image: docker:19.03.12

stages:
  - build
  - test
  - deploy
  - release

variables:
  DOCKER_REGISTRY: $CI_REGISTRY/nha3/nuclearswap

  DOCKER_HOST: tcp://dockerdind:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION

  # app env vars
  REACT_APP_INFURA_PROJECT_ID: $REACT_APP_INFURA_PROJECT_ID
  REACT_APP_AE_NETWORK: $REACT_APP_AE_NETWORK
  REACT_APP_ETH_NETWORK: $REACT_APP_ETH_NETWORK

build:
  rules:
    - if: '$CI_COMMIT_TAG == null'
  stage: build
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  services:
    - name: docker:19.03.12-dind
      alias: dockerdind
  script:
    - cd app/
    - docker pull $DOCKER_REGISTRY:latest || true
    - docker build --network host --cache-from $DOCKER_REGISTRY:latest -t $DOCKER_REGISTRY:$CI_COMMIT_SHORT_SHA -t $DOCKER_REGISTRY:latest .
    - docker push $DOCKER_REGISTRY:$CI_COMMIT_SHORT_SHA
    - docker push $DOCKER_REGISTRY:latest

deploy_cdn:
  stage: deploy
  image: node:16
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
  script:
    - cd src/
    - npm i
    - npm run deploy

make_release:
  image: node:18-buster-slim
  stage: release
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends git-core ca-certificates
    - npm install -g semantic-release @semantic-release/gitlab
  script:
    - semantic-release --plugins @semantic-release/gitlab @semantic-release/release-notes-generator @semantic-release/commit-analyzer
  only:
    - master
