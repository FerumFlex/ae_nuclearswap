{
    "address": "ct_eUUz2CeLgYb28WFkKbrPQHBCMaEZc3Kret6JuAozUeNuK18b",
    "bytecode": "cb_+Qh1RgOgZf6M0LkxQ/DxdeCMGjW+OLxQe6PWVy8s5SJgN5C/0TzAuQhHuQa0/gCijLwCNwGXQDcAKxoAggBVACgsBgAgAAcMBPsDWXJlZnVuZGFibGU6IG5vdCBzZW5kZXIoLA4AIDB/BwwI+wNxcmVmdW5kYWJsZTogYWxyZWFkeSByZWZ1bmRlZCgsDAAgMH8HDAz7A3VyZWZ1bmRhYmxlOiBhbHJlYWR5IHdpdGhkcmF3blgAKCwIACEABwwQ+wOJcmVmdW5kYWJsZTogZW5kdGltZSBub3QgeWV0IHBhc3NlZAEDP/4RVv+AAjcBl0A3AAwBAAIDEV4oqBsHDAb7A4Vsb2NrZWRfY29udHJhY3RfaWQgZG9lcyBub3QgZXhpc3QBAz/+HV/sRwA3AZdAhwI3ADcBNwlHApdARwBHAAcHFxd3GgoAgi8YggAHDAQBA6+CAAEAPysYAABE/CMAAgICAP4gBKTYAjcBJ3d3MwQABwwENgQANQQADAMrEWC2ep8/BAMRXnfhJQEDX/4kP9sRAjcD5wA3Anf3hwI3ADcB5wHnAAg9BAIEAQEARjQEACgcAgIoHAACBAD+QQ/MnQA3ApdAdxcMAQACAxERVv+ADwJvgibPDAECDAEAAgMRcOXHtA8Cb4ImzwwBAAIDEflde8APAm+CJs8rGgiCAClsEAgCLRqCggArGgqCACnsDAr/LRqCggArGgqCACgsCgooLAQKDAMAKCwACgMA/BGEoV2hNwJHAAc3AA8Cb4ImzwwBAET8MwYCAgICAgMRZaXgDw8Cb4ImzwED//5E1kQfADcANwAaDoIvAAEDP/5Kr6NDADcFRwKXQEcABweXQAwBCFUADAEAAgMR/C0wjQ8Cb4ImzwwBBgIDEbFOyiYPAm+CJs9VAgQ7BAg0MAM7BAY0ADwIBDQAPAQENABABAI0AHYEADwANAACAxEgBKTYHAIIDAIIAgMRXiioGwcMEgYDDAwBCF4ADAIEDAMADAEAAwD8ESHf+rY3A0cARwAHNwAPAm+CJs8MAQAMAQIMAQQMAgQMAQYMAQgMA38MA38MA18nDBItKoKCCAwCCAwBBAwCBET8MwYCAgAGAgMRZaXgDw8Cb4ImzwECCPsDjXRoaXMgbG9ja2VkIGNvbnRyYWN0IGFscmVhZHkgZXhpc3Rz/l4oqBsANwGXQBcvGIIAAP5ed+ElAjcDNwJ39+cAJ+cB5wAzBAQHDAY1BAQMAQIoHAIAKBwAAAIADwECNgUEBAYDAAEBAv5gtnqfAjcD9/f39zoUAgQA/mWl4A8CNwGHAzcDl0BHAEcANwGXQDcBl0A3AAn9AAIEBkY2AAAARjYCAAJGNgQABGQCr1+fAYGce2UsbB4ucPpeA3TwH1FsS2dOWhHNzN/44GWqwq2v5QACBAEDP0Y2AAAAYi9fnwGBFExxsc5/xYeax3LrfS1C9QmHFZF+hoCHgRM1jfcESE8AAQM/RjYAAABiL1+fAYHcDRUvOa+7oW97wQEAew41QVjTqGli/3aDX4b50GO9fAABAz/+cOXHtAI3ApdAdzcAKxoAggAcBAIoLAIAIAAHDAT7A31zZWNyZXQgaGFzaCBoYXNoIGRvZXMgbm90IG1hdGNoAQM//ohPrC0CNwL39/cBAQL+paR0QQA3AZdAFwwBAAIDERFW/4APAm+CJs8MAQACAxEAooy8DwJvgibPKxoGggAp7A4G/y0agoIAKxoGggAoLAoGKCwGBgwDACgsAAYDAPwRhKFdoTcCRwAHNwAPAm+CJs8MAQBE/DMGAgIEAgIDEWWl4A8PAm+CJs8BA//+sU7KJgI3AQc3AFgAHwQABwwE+wOJZW5kdGltZSB0aW1lIG11c3QgYmUgaW4gdGhlIGZ1dHVyZQEDP/7vy1DvAjcC5wCHAjcANwHnAOcADAECDAMrEYhPrC0/DAEABAMRJD/bEf75XXvAAjcBl0A3ACsaAIIAVQAoLAQAIAAHDAT7A213aXRoZHJhd2FibGU6IG5vdCByZWNpcGllbnQoLAwAIDB/BwwI+wN9d2l0aGRyYXdhYmxlOiBhbHJlYWR5IHdpdGhkcmF3bigsDgAgMH8HDAz7A3l3aXRoZHJhd2FibGU6IGFscmVhZHkgcmVmdW5kZWQBAz/+/C0wjQI3A0cCRwAHNwAfNAQABwwE+wNhdG9rZW4gYW1vdW50IG11c3QgYmUgPiAwDAECXgAnDAQMAwAMAQADAPwRagAWXjcBNwJHAEcAhwI3ADcBBwwDAAIDEe/LUO8PAgQiGAQEBwwM+wOFdG9rZW4gYWxsb3dhbmNlIG11c3QgYmUgPj0gYW1vdW50AQM/uQGKLxMRAKKMvEEuSFRMQy5yZWZ1bmRhYmxlERFW/4B5LkhUTEMuaXNfbG9ja2VkX2NvbnRyYWN0X2V4aXN0ER1f7EdNZ2V0X2xvY2tlZF9jb250cmFjdBEgBKTYPS5TdHJpbmcuY29uY2F0cxEkP9sRNS5PcHRpb24ubWF0Y2gRQQ/MnSF3aXRoZHJhdxFE1kQfEWluaXQRSq+jQxFmdW5kEV4oqBtRaGF2ZV9sb2NrZWRfY29udHJhY3QRXnfhJS0uTGlzdC5mb2xkbBFgtnqfFS5eNDA2EWWl4A8tQ2hhaW4uZXZlbnQRcOXHtH0uSFRMQy5jaGVja19zZWNyZXRfaGFzaF9tYXRjaGVzEYhPrC0VLl40MDURpaR0QRlyZWZ1bmQRsU7KJlEuSFRMQy5mdXR1cmVfZW5kdGltZRHvy1DvPS5PcHRpb24uZGVmYXVsdBH5XXvASS5IVExDLndpdGhkcmF3YWJsZRH8LTCNbS5IVExDLmlzX3Rva2VuX3RyYW5zZmVyYWJsZYIvAIU2LjEuMACiLPc6",
    "aci": {
        "encodedAci": {
            "contract": {
                "event": {
                    "variant": [
                        {
                            "Log_fund": [
                                "hash",
                                "address",
                                "address"
                            ]
                        },
                        {
                            "Log_withdraw": [
                                "hash"
                            ]
                        },
                        {
                            "Log_refund": [
                                "hash"
                            ]
                        }
                    ]
                },
                "functions": [
                    {
                        "arguments": [],
                        "name": "init",
                        "payable": false,
                        "returns": "HTLC.state",
                        "stateful": false
                    },
                    {
                        "arguments": [
                            {
                                "name": "token",
                                "type": "FungibleTokenInterface"
                            },
                            {
                                "name": "secret_hash",
                                "type": "hash"
                            },
                            {
                                "name": "recipient",
                                "type": "address"
                            },
                            {
                                "name": "endtime",
                                "type": "int"
                            },
                            {
                                "name": "amount",
                                "type": "int"
                            }
                        ],
                        "name": "fund",
                        "payable": false,
                        "returns": "hash",
                        "stateful": true
                    },
                    {
                        "arguments": [
                            {
                                "name": "locked_contract_id",
                                "type": "hash"
                            },
                            {
                                "name": "preimage",
                                "type": "string"
                            }
                        ],
                        "name": "withdraw",
                        "payable": false,
                        "returns": "bool",
                        "stateful": true
                    },
                    {
                        "arguments": [
                            {
                                "name": "locked_contract_id",
                                "type": "hash"
                            }
                        ],
                        "name": "refund",
                        "payable": false,
                        "returns": "bool",
                        "stateful": true
                    },
                    {
                        "arguments": [
                            {
                                "name": "locked_contract_id",
                                "type": "hash"
                            }
                        ],
                        "name": "get_locked_contract",
                        "payable": false,
                        "returns": {
                            "option": [
                                "HTLC.lockContract"
                            ]
                        },
                        "stateful": false
                    },
                    {
                        "arguments": [
                            {
                                "name": "locked_contract_id",
                                "type": "hash"
                            }
                        ],
                        "name": "have_locked_contract",
                        "payable": false,
                        "returns": "bool",
                        "stateful": false
                    }
                ],
                "kind": "contract_main",
                "name": "HTLC",
                "payable": false,
                "state": {
                    "record": [
                        {
                            "name": "locked_contracts",
                            "type": "HTLC.locked_contracts"
                        }
                    ]
                },
                "type_defs": [
                    {
                        "name": "lockContract",
                        "typedef": {
                            "record": [
                                {
                                    "name": "token",
                                    "type": "FungibleTokenInterface"
                                },
                                {
                                    "name": "secret_hash",
                                    "type": "hash"
                                },
                                {
                                    "name": "recipient",
                                    "type": "address"
                                },
                                {
                                    "name": "sender",
                                    "type": "address"
                                },
                                {
                                    "name": "endtime",
                                    "type": "int"
                                },
                                {
                                    "name": "amount",
                                    "type": "int"
                                },
                                {
                                    "name": "withdrawn",
                                    "type": "bool"
                                },
                                {
                                    "name": "refunded",
                                    "type": "bool"
                                },
                                {
                                    "name": "preimage",
                                    "type": "string"
                                }
                            ]
                        },
                        "vars": []
                    },
                    {
                        "name": "locked_contracts",
                        "typedef": {
                            "map": [
                                "hash",
                                "HTLC.lockContract"
                            ]
                        },
                        "vars": []
                    }
                ]
            }
        },
        "externalEncodedAci": [
            {
                "namespace": {
                    "name": "ListInternal",
                    "type_defs": []
                }
            },
            {
                "namespace": {
                    "name": "List",
                    "type_defs": []
                }
            },
            {
                "namespace": {
                    "name": "Option",
                    "type_defs": []
                }
            },
            {
                "namespace": {
                    "name": "String",
                    "type_defs": []
                }
            },
            {
                "contract": {
                    "event": {
                        "variant": [
                            {
                                "Transfer": [
                                    "address",
                                    "address",
                                    "int"
                                ]
                            },
                            {
                                "Allowance": [
                                    "address",
                                    "address",
                                    "int"
                                ]
                            }
                        ]
                    },
                    "functions": [
                        {
                            "arguments": [],
                            "name": "aex9_extensions",
                            "payable": false,
                            "returns": {
                                "list": [
                                    "string"
                                ]
                            },
                            "stateful": false
                        },
                        {
                            "arguments": [],
                            "name": "meta_info",
                            "payable": false,
                            "returns": "FungibleTokenInterface.meta_info",
                            "stateful": false
                        },
                        {
                            "arguments": [],
                            "name": "total_supply",
                            "payable": false,
                            "returns": "int",
                            "stateful": false
                        },
                        {
                            "arguments": [],
                            "name": "owner",
                            "payable": false,
                            "returns": "address",
                            "stateful": false
                        },
                        {
                            "arguments": [],
                            "name": "balances",
                            "payable": false,
                            "returns": {
                                "map": [
                                    "address",
                                    "int"
                                ]
                            },
                            "stateful": false
                        },
                        {
                            "arguments": [
                                {
                                    "name": "_1",
                                    "type": "address"
                                }
                            ],
                            "name": "balance",
                            "payable": false,
                            "returns": {
                                "option": [
                                    "int"
                                ]
                            },
                            "stateful": false
                        },
                        {
                            "arguments": [
                                {
                                    "name": "_1",
                                    "type": "FungibleTokenInterface.allowance_accounts"
                                }
                            ],
                            "name": "allowance",
                            "payable": false,
                            "returns": {
                                "option": [
                                    "int"
                                ]
                            },
                            "stateful": false
                        },
                        {
                            "arguments": [
                                {
                                    "name": "_1",
                                    "type": "address"
                                },
                                {
                                    "name": "_2",
                                    "type": "address"
                                },
                                {
                                    "name": "_3",
                                    "type": "int"
                                }
                            ],
                            "name": "transfer_allowance",
                            "payable": false,
                            "returns": "unit",
                            "stateful": true
                        },
                        {
                            "arguments": [
                                {
                                    "name": "_1",
                                    "type": "address"
                                },
                                {
                                    "name": "_2",
                                    "type": "int"
                                }
                            ],
                            "name": "transfer",
                            "payable": false,
                            "returns": "unit",
                            "stateful": true
                        }
                    ],
                    "kind": "contract_interface",
                    "name": "FungibleTokenInterface",
                    "payable": false,
                    "type_defs": [
                        {
                            "name": "meta_info",
                            "typedef": {
                                "record": [
                                    {
                                        "name": "name",
                                        "type": "string"
                                    },
                                    {
                                        "name": "symbol",
                                        "type": "string"
                                    },
                                    {
                                        "name": "decimals",
                                        "type": "int"
                                    }
                                ]
                            },
                            "vars": []
                        },
                        {
                            "name": "allowance_accounts",
                            "typedef": {
                                "record": [
                                    {
                                        "name": "from_account",
                                        "type": "address"
                                    },
                                    {
                                        "name": "for_account",
                                        "type": "address"
                                    }
                                ]
                            },
                            "vars": []
                        }
                    ]
                }
            }
        ],
        "interface": "\n\n\n\ncontract interface FungibleTokenInterface =\n  datatype event = Transfer(address, address, int) | Allowance(address, address, int)\n  record meta_info = {name : string,symbol : string,decimals : int}\n  record allowance_accounts = {from_account : address,for_account : address}\n  entrypoint aex9_extensions : () => list(string)\n  entrypoint meta_info : () => FungibleTokenInterface.meta_info\n  entrypoint total_supply : () => int\n  entrypoint owner : () => address\n  entrypoint balances : () => map(address, int)\n  entrypoint balance : (address) => option(int)\n  entrypoint allowance : (FungibleTokenInterface.allowance_accounts) => option(int)\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\n  stateful entrypoint transfer : (address, int) => unit\n\nmain contract HTLC =\n  record state = {locked_contracts : HTLC.locked_contracts}\n  datatype event = Log_fund(hash, address, address) | Log_withdraw(hash) | Log_refund(hash)\n  record lockContract = {token : FungibleTokenInterface,secret_hash : hash,recipient : address,sender : address,endtime : int,amount : int,withdrawn : bool,refunded : bool,preimage : string}\n  type locked_contracts = map(hash, HTLC.lockContract)\n  entrypoint init : () => HTLC.state\n  stateful entrypoint fund : (FungibleTokenInterface, hash, address, int, int) => hash\n  stateful entrypoint withdraw : (hash, string) => bool\n  stateful entrypoint refund : (hash) => bool\n  entrypoint get_locked_contract : (hash) => option(HTLC.lockContract)\n  entrypoint have_locked_contract : (hash) => bool\n"
    }
}