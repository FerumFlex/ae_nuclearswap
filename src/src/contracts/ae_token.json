{"address":"ct_2FfcTkcYNxcT2dtohKFutjvyi9haWHmi9sQEpcNCyTU2GFF5kg","bytecode":"cb_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zA8Cb4ImzwwBBAwBAAIDEXZLgUEPAm+CJs8rGhSGABUYFAQtGoaGACzaOIYCABQYOAQtGoaGAgwBAAwBAgwBBET8UwYGBAQEAAYEAxFlpeAP/u/LUO8CNwLnAIcCNwA3AecA5wAMAQIMAysRhiKVxT8MAQAEAxEkP9sR/u/MWOEANwJHAAc3AAwBAgIDEZcFecwPAm+CJs9VAAwBACcMBA8CBAwCBAIDEYvH9MYPAm+CJs8tao6OBAJVAAwBAAwBAkT8UwYGBAQEAgYEAxFlpeAP/v6upPoANwBHAAECgrkCwC8gEQMUe82xLkZ1bmdpYmxlVG9rZW5GdWxsLmludGVybmFsX2NoYW5nZV9hbGxvd2FuY2UREQBPphFzd2FwERQ3tDglbWV0YV9pbmZvER3sZv8dc3dhcHBlZBEh3/q2SXRyYW5zZmVyX2FsbG93YW5jZREjw1xqPXJlc2V0X2FsbG93YW5jZREkP9sRNS5PcHRpb24ubWF0Y2gRLZ003pEuRnVuZ2libGVUb2tlbkZ1bGwucmVxdWlyZV9hbGxvd2FuY2URMcCNcz1hZXg5X2V4dGVuc2lvbnMRPYVajkFjaGFuZ2VfYWxsb3dhbmNlET5seDNRYWxsb3dhbmNlX2Zvcl9jYWxsZXIRRNZEHxFpbml0EVjGkwkZLl4xNDUwEWWl4A8tQ2hhaW4uZXZlbnQRagAWXiVhbGxvd2FuY2URdkuBQYkuRnVuZ2libGVUb2tlbkZ1bGwucmVxdWlyZV9iYWxhbmNlEYAka0chYmFsYW5jZXMRhKFdoSF0cmFuc2ZlchGGIpXFGS5eMTQ1MRGLx/TGxS5GdW5naWJsZVRva2VuRnVsbC5yZXF1aXJlX2FsbG93YW5jZV9ub3RfZXhpc3RlbnQRlwV5zLUuRnVuZ2libGVUb2tlbkZ1bGwucmVxdWlyZV9ub25fbmVnYXRpdmVfdmFsdWURqsDChjkuU3RyaW5nLmxlbmd0aBGx78F7EWJ1cm4RtIwWhB1iYWxhbmNlEc/dmqIRbWludBHWOQ1+KWNoZWNrX3N3YXAR10wV3ilhbGxvd2FuY2VzEdtjdagxdG90YWxfc3VwcGx5Ee2RfN+RLkZ1bmdpYmxlVG9rZW5GdWxsLmludGVybmFsX3RyYW5zZmVyEe/LUO89Lk9wdGlvbi5kZWZhdWx0Ee/MWOFBY3JlYXRlX2FsbG93YW5jZRH+rqT6FW93bmVygi8AhTYuMS4wAEsk0VQ=","aci":{"encodedAci":{"contract":{"event":{"variant":[{"Transfer":["address","address","int"]},{"Allowance":["address","address","int"]},{"Burn":["address","int"]},{"Mint":["address","int"]},{"Swap":["address","int"]}]},"functions":[{"arguments":[],"name":"aex9_extensions","payable":false,"returns":{"list":["string"]},"stateful":false},{"arguments":[{"name":"name","type":"string"},{"name":"decimals","type":"int"},{"name":"symbol","type":"string"},{"name":"initial_owner_balance","type":{"option":["int"]}}],"name":"init","payable":false,"returns":"FungibleTokenFull.state","stateful":false},{"arguments":[],"name":"meta_info","payable":false,"returns":"FungibleTokenFull.meta_info","stateful":false},{"arguments":[],"name":"total_supply","payable":false,"returns":"int","stateful":false},{"arguments":[],"name":"owner","payable":false,"returns":"address","stateful":false},{"arguments":[],"name":"balances","payable":false,"returns":"FungibleTokenFull.balances","stateful":false},{"arguments":[{"name":"account","type":"address"}],"name":"balance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[],"name":"swapped","payable":false,"returns":{"map":["address","int"]},"stateful":false},{"arguments":[],"name":"allowances","payable":false,"returns":"FungibleTokenFull.allowances","stateful":false},{"arguments":[{"name":"allowance_accounts","type":"FungibleTokenFull.allowance_accounts"}],"name":"allowance","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"}],"name":"allowance_for_caller","payable":false,"returns":{"option":["int"]},"stateful":false},{"arguments":[{"name":"from_account","type":"address"},{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value","type":"int"}],"name":"create_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"},{"name":"value_change","type":"int"}],"name":"change_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"for_account","type":"address"}],"name":"reset_allowance","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"to_account","type":"address"},{"name":"value","type":"int"}],"name":"transfer","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"value","type":"int"}],"name":"burn","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"account","type":"address"},{"name":"value","type":"int"}],"name":"mint","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[],"name":"swap","payable":false,"returns":{"tuple":[]},"stateful":true},{"arguments":[{"name":"account","type":"address"}],"name":"check_swap","payable":false,"returns":"int","stateful":true}],"kind":"contract_main","name":"FungibleTokenFull","payable":false,"state":{"record":[{"name":"owner","type":"address"},{"name":"total_supply","type":"int"},{"name":"balances","type":"FungibleTokenFull.balances"},{"name":"meta_info","type":"FungibleTokenFull.meta_info"},{"name":"allowances","type":"FungibleTokenFull.allowances"},{"name":"swapped","type":{"map":["address","int"]}}]},"type_defs":[{"name":"meta_info","typedef":{"record":[{"name":"name","type":"string"},{"name":"symbol","type":"string"},{"name":"decimals","type":"int"}]},"vars":[]},{"name":"allowance_accounts","typedef":{"record":[{"name":"from_account","type":"address"},{"name":"for_account","type":"address"}]},"vars":[]},{"name":"balances","typedef":{"map":["address","int"]},"vars":[]},{"name":"allowances","typedef":{"map":["FungibleTokenFull.allowance_accounts","int"]},"vars":[]}]}},"externalEncodedAci":[{"namespace":{"name":"ListInternal","type_defs":[]}},{"namespace":{"name":"List","type_defs":[]}},{"namespace":{"name":"Option","type_defs":[]}},{"namespace":{"name":"String","type_defs":[]}}],"interface":"\n\n\n\nmain contract FungibleTokenFull =\n  record state = {owner : address,total_supply : int,balances : FungibleTokenFull.balances,meta_info : FungibleTokenFull.meta_info,allowances : FungibleTokenFull.allowances,swapped : map(address, int)}\n  datatype event = Transfer(address, address, int) | Allowance(address, address, int) | Burn(address, int) | Mint(address, int) | Swap(address, int)\n  record meta_info = {name : string,symbol : string,decimals : int}\n  record allowance_accounts = {from_account : address,for_account : address}\n  type balances = map(address, int)\n  type allowances = map(FungibleTokenFull.allowance_accounts, int)\n  entrypoint aex9_extensions : () => list(string)\n  entrypoint init : (string, int, string, option(int)) => FungibleTokenFull.state\n  entrypoint meta_info : () => FungibleTokenFull.meta_info\n  entrypoint total_supply : () => int\n  entrypoint owner : () => address\n  entrypoint balances : () => FungibleTokenFull.balances\n  entrypoint balance : (address) => option(int)\n  entrypoint swapped : () => map(address, int)\n  entrypoint allowances : () => FungibleTokenFull.allowances\n  entrypoint allowance : (FungibleTokenFull.allowance_accounts) => option(int)\n  entrypoint allowance_for_caller : (address) => option(int)\n  stateful entrypoint transfer_allowance : (address, address, int) => unit\n  stateful entrypoint create_allowance : (address, int) => unit\n  stateful entrypoint change_allowance : (address, int) => unit\n  stateful entrypoint reset_allowance : (address) => unit\n  stateful entrypoint transfer : (address, int) => unit\n  stateful entrypoint burn : (int) => unit\n  stateful entrypoint mint : (address, int) => unit\n  stateful entrypoint swap : () => unit\n  stateful entrypoint check_swap : (address) => int\n"}}
